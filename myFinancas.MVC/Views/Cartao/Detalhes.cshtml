@model myFinancas.MVC.Models.Domain.FaturaModel
@using myFinancas.MVC.Models.Domain;
@using myFinancas.MVC.Models.Enuns;
@{
    ViewBag.Title = "Detalhes";
    Layout = "~/Views/Shared/_Layout.cshtml";
    CartaoModel Cartao = ViewBag.Cartao;
    List<FaturaModel> Faturas = ViewBag.Faturas;
    List<string> meses = EnumExtensions.getDescriptionsTipoMes();
    string MesFormatado = @DateTime.Now.ToString("MMMM")[0].ToString().ToUpper() + DateTime.Now.ToString("MMMM").Substring(1);
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-info card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.CARTAO)</i>
                    </div>
                    <p class="card-category">@Cartao.Bandeira</p>
                    <h3 class="card-title">@Cartao.Nome</h3>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.RELATORIOS)</i>
                        <a href="#" class="info-link">Ver Relatórios</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-warning card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.FATURAS)</i>
                    </div>
                    <p class="card-category">Faturas</p>
                    <h3 class="card-title">@Faturas.Count</h3>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.INFO)</i> Mais informações
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-success card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.CONTAS)</i>
                    </div>
                    <p class="card-category">Total</p>
                    <h3 class="card-title">@Faturas.Sum(x => x.Valor)</h3>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.NOTA)</i> Soma das faturas desse mês
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary">
                    <h4 class="card-title">Nova Fatura</h4>
                    <p class="card-category">Adicioanar ao cartão uma nova Fatura</p>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("SalvarFatura", "Cartao", null, FormMethod.Post, new {  autocomplete="off" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="row">
                            <input hidden class="form-control" value="@Cartao.Id" name="IdCartao" rows="2" />

                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DataVencimento)
                                    <input style="margin-top: 12px;" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="DataVencimento" class="form-control" required>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MesReferente, new { Classe = "inputState"})
                                    @Html.DropDownListFor(x => x.MesReferente, new SelectList(meses, @MesFormatado), "-Selecione-", new { Class = "form-control", style = "background-color: #202940; color: white", required = true })
                                    @Html.ValidationMessageFor(model => model.MesReferente, "", new { Class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-check">
                                    <label class="form-check-label">
                                        @Html.TextBox("IsFechada", true, new { Class = "form-check-input", Type = "checkbox" })
                                        Fatura Fechada
                                        <span class="form-check-sign">
                                            <span class="check"></span>
                                        </span>
                                    </label>
                                    <p>Não aceita novos lançamentos.</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-check">
                                    <label class="form-check-label">
                                        @Html.TextBox("IsPaga", true, new { Class = "form-check-input", Type = "checkbox" })
                                        Fatura Paga
                                        <span class="form-check-sign">
                                            <span class="check"></span>
                                        </span>
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Observacao, new { Class = "bmd-label-floating" })
                                    @Html.TextBoxFor(model => model.Observacao, new { Class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary pull-right">Adicionar</button>
                        <div class="clearfix"></div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary">
                    <h4 class="card-title ">Faturas</h4>
                    <p class="card-category">Lista de todas as faturas</p>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead class=" text-primary">
                                <tr>
                                    <th>
                                        Fatura
                                    </th>
                                    <th>
                                        Valor
                                    </th>
                                    <th class="text-center">
                                        Situação
                                    </th>
                                    <th class="text-center">
                                        Ação
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (FaturaModel Fatura in Faturas)
                                {
                                    <tr>
                                        <td>
                                            @Fatura.MesReferente
                                        </td>
                                        <td>
                                            @Html.DisplayFor(fatura => Fatura.Valor)
                                        </td>
                                        <td class="text-center">
                                            @if (Fatura.IsFechada)
                                            {
                                                if (Fatura.IsPaga)
                                                {
                                                    <button class="btn btn-default" style="width: 100px" disabled>Paga</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-success"
                                                            onclick="MensagemConfirma('Ateção', 'Deseja pagar a fatura @Fatura.DataVencimento.ToString("dd/MM/yyyy")? Novos lançamentos não porderão ser adicionados a esta fatura.', '@Url.Action("PagarFatura", "Cartao", new { Id = Fatura.Id, IdCartao = Cartao.Id })')"
                                                            style="width: 100px">
                                                        Pagar
                                                    </button>
                                                }
                                            }
                                            else
                                            {
                                                <button class="btn btn-warning"
                                                        onclick="MensagemConfirma('Ateção', 'Deseja fechar a fatura @Fatura.DataVencimento.ToString("dd/MM/yyyy")? As dividas serão geradas para cada comprador e não se poderá mais adicionar novos lancamentos.', '@Url.Action("FecharFatura", "Cartao", new { Id = Fatura.Id, IdCartao = Cartao.Id })')"
                                                        style="width: 100px">
                                                    Fechar
                                                </button>
                                            }
                                        </td>
                                        <td align="center" style="width:250px">
                                            <button type="button" rel="tooltip" title="Editar"
                                                    class="btn btn-white btn-link btn-sm">
                                                <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.EDITAR)</i>
                                            </button>
                                            <button type="button" rel="tooltip" title="Detalhes"
                                                    onclick="location.href='@Url.Action("Detalhes", "Fatura", new { id = Fatura.Id })'"
                                                    class="btn btn-white btn-link btn-sm">
                                                <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.DETALHES)</i>
                                            </button>
                                            <button type="button" rel="tooltip" title="Remover"
                                                    onclick="MensagemConfirma('Ateção', 'Deseja remover a fatura @Fatura.DataVencimento.ToString("dd/MM/yyyy")?', '@Url.Action("RemoverFatura", "Cartao", new { Id = Fatura.Id, IdCartao = Fatura.IdCartao })')"
                                                    class="btn btn-white btn-link btn-sm">
                                                <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.REMOVER)</i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}