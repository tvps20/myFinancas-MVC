@model myFinancas.MVC.Models.Domain.LancamentoModel
@using myFinancas.MVC.Models.Domain;
@using myFinancas.MVC.Models.Enuns;
@{
    ViewBag.Title = "Detalhes";
    Layout = "~/Views/Shared/_Layout.cshtml";
    FaturaModel Fatura = ViewBag.Fatura;
    Dictionary<string, List<LancamentoModel>> Lancamentos = ViewBag.Lancamentos;
    List<CompradorModel> Compradores = ViewBag.Compradores;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header @(Fatura.IsPaga ? "card-header-success" : "card-header-danger" ) card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.FATURA)</i>
                    </div>
                    <p class="card-category">@(Fatura.IsPaga ? "Paga" : "Não Pagou")</p>
                    <h5 class="card-title">R$ @Fatura.Valor</h5>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.TEMPO)</i> Vencimento @Fatura.DataVencimento.ToString("dd/MM/yyyy")
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-default card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.NOTA)</i>
                    </div>
                    <p class="card-category">Fatura de</p>
                    <p class="card-title">@(Fatura.Observacao != null ? Fatura.Observacao : Fatura.MesReferente)</p>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.DONWLOAD)</i>
                        <a href="#" class="info-link">Download da Fatura</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header @(Fatura.IsFechada ? "card-header-danger" : "card-header-warning" ) card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.INFO)</i>
                    </div>
                    <p class="card-category">Situação</p>
                    <p class="card-title">@(Fatura.IsFechada ? "Fatura Fechada" : "Fatura Aberta")</p>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.NOTA)</i>
                        @(Fatura.IsFechada ? "Não se pode adicinar novos lançamentos." : "Adicone novos lançamentos")
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-info card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.LANCAMENTOS)</i>
                    </div>
                    <p class="card-category">Lançamentos</p>
                    <h3 class="card-title">@Lancamentos.Sum(x => x.Value.Count)</h3>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.LANCAMENTOS)</i>
                        <a href="@Url.Action("Index", "Lancamento")" class="info-link">Todos os Lançamentos</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary">
                    <h4 class="card-title">Novo Lançamento</h4>
                    <p class="card-category">Adicionar a fatura um novo Lançamento</p>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("SalvarLancamento", "Fatura", null, FormMethod.Post, new { autocomplete = "off" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="row">
                            <input hidden class="form-control" value="@Fatura.Id" name="IdFatura" rows="2" />

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DataCompra)
                                    <input style="margin-top: 12px;" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="DataCompra" class="form-control" required>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="inputState">Comprador</label>
                                    <select class="form-control input-sm" name="IdComprador" style="background-color: #202940; color: white" required>
                                        @foreach (CompradorModel Comprador in Compradores)
                                        {
                                            <option value="@Comprador.Id"> @Comprador.Nome </option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4" style="margin-top: 6px;">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Valor, new { Class = "bmd-label-floating" })
                                    @Html.TextBoxFor(model => model.Valor, new { Class = "form-control money", required = true })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="bmd-label-floating">
                                        Descrição
                                    </label>
                                    <textarea class="form-control" name="Descricao" rows="1" required></textarea>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-check">
                                    <label class="form-check-label">
                                        @Html.TextBox("IsParcelado", true, new { Class = "form-check-input", Type = "checkbox" })
                                        Compra Parcelada
                                        <span class="form-check-sign">
                                            <span class="check"></span>
                                        </span>
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-2" id="parcelaAtualDiv">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ParcelaAtual, new { Class = "bmd-label-floating" })
                                    @Html.TextBoxFor(model => model.ParcelaAtual, new { Class = "form-control", type = "number" })
                                </div>
                            </div>
                            <div class="col-md-2" id="qtdParcelasDiv">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.QtdParcelas, new { Class = "bmd-label-floating" })
                                    @Html.TextBoxFor(model => model.QtdParcelas, new { Class = "form-control", type = "number" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="bmd-label-floating">
                                        Observações
                                    </label>
                                    <textarea class="form-control" name="Observacao" rows="1"></textarea>
                                </div>
                            </div>
                        </div>

                        <button type="submit" onclick="formatarValor()" class="btn btn-primary pull-right" disabled="@(Fatura.IsFechada || Fatura.IsFechada ? true : false)">Adicionar</button>
                        <div class="clearfix"></div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="card-columns">
        @foreach (string key in Lancamentos.Keys)
        {
            <div class="card">
                <div class="card-header card-header-info">
                    <h4 class="card-title ">@key</h4>
                    <p class="card-category">Valor total de R$ @Lancamentos[key].Sum(x => x.Valor)</p>
                </div>

                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead class=" text-primary">
                                <tr>
                                    <th>
                                        Descrição
                                    </th>
                                    <th>
                                        Valor
                                    </th>
                                    <th class="text-center">
                                        Parcela
                                    </th>
                                    <th class="text-center">
                                        Ação
                                    </th>
                                </tr>
                            </thead>

                            @if (Lancamentos[key].Count < 5)
                            {
                                <tbody>
                                    @foreach (LancamentoModel Lancamento in Lancamentos[key])
                                    {
                                        <tr>
                                            <td>
                                                @Lancamento.Descricao
                                            </td>
                                            <td>
                                                @Html.DisplayFor(lancamento => Lancamento.Valor)
                                            </td>
                                            <td class="text-center">
                                                @(Lancamento.IsParcelado ? Lancamento.ParcelaAtual + "/" + Lancamento.QtdParcelas : "-")
                                            </td>
                                            <td align="center" style="width: 150px">
                                                <button type="button" rel="tooltip" title="Detalhes"
                                                        onclick="mostrarModalDetalhes(@Lancamento.Id, '@Url.Action("Detalhes", "Lancamento")')"
                                                        class="btn btn-white btn-link btn-sm">
                                                    <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.DETALHES)</i>
                                                </button>
                                                <button type="button" rel="tooltip" title="Remover"
                                                        onclick="MensagemConfirma('Ateção', 'Deseja remover o Lançamento @Lancamento.Valor?', '@Url.Action("RemoverLancamento", "Fatura", new { Id = Lancamento.Id, IdFatura = Fatura.Id })')"
                                                        class="btn btn-white btn-link btn-sm">
                                                    <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.REMOVER)</i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            }
                            else
                            {

                                <tbody>
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        <tr>
                                            <td>
                                                @Lancamentos[key][i].Descricao
                                            </td>
                                            <td>
                                                @Html.DisplayFor(lancamento => Lancamentos[key][i].Valor)
                                            </td>
                                            <td class="text-center">
                                                @(Lancamentos[key][i].IsParcelado ? Lancamentos[key][i].ParcelaAtual + "/" + Lancamentos[key][i].QtdParcelas : "-")
                                            </td>
                                            <td align="center" style="width: 150px">
                                                <button type="button" rel="tooltip" title="Detalhes"
                                                        onclick="mostrarModalDetalhes(@Lancamentos[key][i].Id, '@Url.Action("Detalhes", "Lancamento")')"
                                                        class="btn btn-white btn-link btn-sm">
                                                    <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.DETALHES)</i>
                                                </button>
                                                <button type="button" rel="tooltip" title="Remover"
                                                        onclick="MensagemConfirma('Ateção', 'Deseja remover o Lançamento @Lancamentos[key][i].Valor?', '@Url.Action("RemoverLancamento", "Fatura", new { Id = Lancamentos[key][i].Id, IdFatura = Fatura.Id })')"
                                                        class="btn btn-white btn-link btn-sm">
                                                    <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.REMOVER)</i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tbody class="collapse" id="@(key)">
                                    @for (int i = 5; i < Lancamentos[key].Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                @Lancamentos[key][i].Descricao
                                            </td>
                                            <td>
                                                @Html.DisplayFor(lancamento => Lancamentos[key][i].Valor)
                                            </td>
                                            <td class="text-center">
                                                @(Lancamentos[key][i].IsParcelado ? Lancamentos[key][i].ParcelaAtual + "/" + Lancamentos[key][i].QtdParcelas : "-")
                                            </td>
                                            <td align="center" style="width: 150px">
                                                <button type="button" rel="tooltip" title="Detalhes"
                                                        onclick="mostrarModalDetalhes(@Lancamentos[key][i].Id, '@Url.Action("Detalhes", "Lancamento")')"
                                                        class="btn btn-white btn-link btn-sm">
                                                    <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.DETALHES)</i>
                                                </button>
                                                <button type="button" rel="tooltip" title="Remover"
                                                        onclick="MensagemConfirma('Ateção', 'Deseja remover o Lançamento @Lancamentos[key][i].Valor?', '@Url.Action("RemoverLancamento", "Fatura", new { Id = Lancamentos[key][i].Id, IdFatura = Fatura.Id })')"
                                                        class="btn btn-white btn-link btn-sm">
                                                    <i class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.REMOVER)</i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            }
                        </table>
                        @if (Lancamentos[key].Count > 5)
                        {
                            <div class="container">
                                <div class="row">
                                    <div class="col text-center">
                                        <button type="button" id="mostrarMais" title="Mostrar mais"
                                                data-toggle="collapse" data-target="@("#" + key)" aria-expanded="false" aria-controls="@("#" + key)"
                                                class="btn btn-white btn-link btn-sm">
                                            <i id="iconeMostraMais" class="material-icons">@EnumExtensions.EnumToDescriptionString(TipoIcone.DOWNMOREMAIS)</i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

        }
    </div>
</div>

<div id="modalDetalhes"></div>

@section Scripts {
    @Html.Partial("_ModalFuncao")

    <style type="text/css" media="screen and (min-width:576px)">
        .card-columns {
            column-count: 1;
        }
    </style>

    <style type="text/css" media="screen and (min-width:720px)">
        .card-columns {
            column-count: @(Lancamentos.Count <= 2 ? 1 : 2);
        }
    </style>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#parcelaAtualDiv").css("visibility", "hidden");
            $("#qtdParcelasDiv").css("visibility", "hidden");

            $("#IsParcelado").click(function () {
                if ($(this).val() == "true") {
                    $("#parcelaAtualDiv").css("visibility", "hidden");
                    $("#qtdParcelasDiv").css("visibility", "hidden");
                    $(this).val("false");
                    document.getElementById('QtdParcelas').value = null;
                    document.getElementById('ParcelaAtual').value = null;
                }
                else {
                    $("#parcelaAtualDiv").css("visibility", "visible");
                    $("#qtdParcelasDiv").css("visibility", "visible");
                    $(this).val("true");
                }
            });

            $('#mostrarMais').click(function () {
                if (document.getElementById('iconeMostraMais').innerHTML == '@EnumExtensions.EnumToDescriptionString(TipoIcone.DOWNMOREMAIS)') {
                    document.getElementById('iconeMostraMais').innerHTML = '@EnumExtensions.EnumToDescriptionString(TipoIcone.UPMOREMAIS)';
                }
                else {
                    document.getElementById('iconeMostraMais').innerHTML = '@EnumExtensions.EnumToDescriptionString(TipoIcone.DOWNMOREMAIS)';
                }
            });
        });
    </script>
}